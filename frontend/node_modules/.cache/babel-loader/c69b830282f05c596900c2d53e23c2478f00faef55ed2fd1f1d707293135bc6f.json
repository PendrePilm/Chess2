{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"board-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Partie d'Échecs\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Code de la partie : \" + _toDisplayString($props.gameCode), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Vous jouez les : \" + _toDisplayString($props.playerColor), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    id: \"chessboard\",\n    class: \"chessboard\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$props","gameCode","playerColor","id"],"sources":["C:\\wamp64\\www\\Chess\\frontend\\src\\components\\GameBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"board-container\">\r\n      <h2>Partie d'Échecs</h2>\r\n      <p>Code de la partie : {{ gameCode }}</p>\r\n      <p>Vous jouez les : {{ playerColor }}</p>\r\n      <div id=\"chessboard\" class=\"chessboard\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"GameBoard\",\r\n    props: ['gameCode', 'playerColor'],\r\n    data() {\r\n      return {\r\n        board: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      this.initializeBoard();\r\n    },\r\n    methods: {\r\n      initializeBoard() {\r\n        const boardElement = document.getElementById('chessboard');\r\n        boardElement.innerHTML = ''; // Clear the board\r\n  \r\n        for (let row = 0; row < 8; row++) {\r\n          for (let col = 0; col < 8; col++) {\r\n            const square = document.createElement('div');\r\n            square.classList.add('square');\r\n            square.classList.add((row + col) % 2 === 0 ? 'beige' : 'brown');\r\n            boardElement.appendChild(square);\r\n          }\r\n        }\r\n  \r\n        // Add pieces (for simplicity, only adding pawns here)\r\n        this.addPieces();\r\n      },\r\n      addPieces() {\r\n        const boardElement = document.getElementById('chessboard');\r\n        const squares = boardElement.getElementsByClassName('square');\r\n  \r\n        // Add white pawns\r\n        for (let i = 8; i < 16; i++) {\r\n          squares[i].textContent = '♙';\r\n        }\r\n  \r\n        // Add black pawns\r\n        for (let i = 48; i < 56; i++) {\r\n          squares[i].textContent = '♟';\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .board-container {\r\n    padding: 20px;\r\n    text-align: center;\r\n    background-color: #ffffff; /* Fond clair pour mieux voir l'échiquier */\r\n  }\r\n  \r\n  .chessboard {\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 50px);\r\n    grid-template-rows: repeat(8, 50px);\r\n    border: 2px solid #333;\r\n  }\r\n  \r\n  .square {\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .square.beige {\r\n    background-color: #f5f5dc;\r\n  }\r\n  \r\n  .square.brown {\r\n    background-color: #8b4513;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAiB;;uBAA5BC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJC,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAAyC,WAAtC,sBAAoB,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,QAAQ,kBAClCH,mBAAA,CAAyC,WAAtC,mBAAiB,GAAAC,gBAAA,CAAGC,MAAA,CAAAE,WAAW,kB,0BAClCJ,mBAAA,CAA8C;IAAzCK,EAAE,EAAC,YAAY;IAACR,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}