{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"GameBoard\",\n  props: ['gameCode', 'playerColor'],\n  data() {\n    return {\n      board: []\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initializeBoard();\n    });\n  },\n  methods: {\n    initializeBoard() {\n      const boardElement = document.getElementById('chessboard');\n      if (!boardElement) {\n        console.error(\"Erreur : Élément chessboard introuvable !\");\n        return;\n      }\n      boardElement.innerHTML = ''; // Nettoyage avant création\n\n      for (let row = 0; row < 8; row++) {\n        for (let col = 0; col < 8; col++) {\n          const square = document.createElement('div');\n          square.classList.add('square');\n          square.classList.add((row + col) % 2 === 0 ? 'beige' : 'brown');\n          square.dataset.row = row;\n          square.dataset.col = col;\n          boardElement.appendChild(square);\n        }\n      }\n      this.addPieces();\n    },\n    addPieces() {\n      const boardElement = document.getElementById('chessboard');\n      const squares = boardElement.getElementsByClassName('square');\n      const pieceSymbols = {\n        rook: ['♖', '♜'],\n        knight: ['♘', '♞'],\n        bishop: ['♗', '♝'],\n        queen: ['♕', '♛'],\n        king: ['♔', '♚'],\n        pawn: ['♙', '♟']\n      };\n      const pieceOrder = ['rook', 'knight', 'bishop', 'queen', 'king', 'bishop', 'knight', 'rook'];\n      for (let i = 0; i < 8; i++) {\n        squares[i].textContent = pieceSymbols[pieceOrder[i]][1]; // Tours, Cavaliers, Fous, Reine, Roi noirs\n        squares[8 + i].textContent = pieceSymbols.pawn[1]; // Pions noirs\n        squares[48 + i].textContent = pieceSymbols.pawn[0]; // Pions blancs\n        squares[56 + i].textContent = pieceSymbols[pieceOrder[i]][0]; // Tours, Cavaliers, Fous, Reine, Roi blancs\n      }\n    },\n    async logout() {\n      try {\n        await axios.post('http://localhost:8000/logout/');\n        localStorage.removeItem('userPseudo');\n        localStorage.removeItem('userEmail');\n        localStorage.removeItem('userNom');\n        localStorage.removeItem('userPrenom');\n        this.$router.push('/login');\n      } catch (error) {\n        console.error(\"Erreur lors de la déconnexion :\", error.response ? error.response.data : error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","data","board","mounted","$nextTick","initializeBoard","methods","boardElement","document","getElementById","console","error","innerHTML","row","col","square","createElement","classList","add","dataset","appendChild","addPieces","squares","getElementsByClassName","pieceSymbols","rook","knight","bishop","queen","king","pawn","pieceOrder","i","textContent","logout","post","localStorage","removeItem","$router","push","response","message"],"sources":["C:\\wamp64\\www\\Chess\\frontend\\src\\components\\GameBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"game-container\">\r\n      <aside class=\"sidebar\">\r\n        <nav>\r\n          <ul>\r\n            <li><router-link to=\"/menu\">Accueil</router-link></li>\r\n            <li><router-link to=\"/parametres\">Paramètres</router-link></li>\r\n            <li><a href=\"#\" @click.prevent=\"logout\">Déconnexion</a></li>\r\n          </ul>\r\n        </nav>\r\n      </aside>\r\n      <div class=\"board-container\">\r\n        <h2>Partie d'Échecs</h2>\r\n        <p>Code de la partie : {{ gameCode }}</p>\r\n        <p>Vous jouez les : {{ playerColor }}</p>\r\n        <div id=\"chessboard\" class=\"chessboard\"></div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: \"GameBoard\",\r\n    props: ['gameCode', 'playerColor'],\r\n    data() {\r\n      return {\r\n        board: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.initializeBoard();\r\n      });\r\n    },\r\n    methods: {\r\n      initializeBoard() {\r\n        const boardElement = document.getElementById('chessboard');\r\n        if (!boardElement) {\r\n          console.error(\"Erreur : Élément chessboard introuvable !\");\r\n          return;\r\n        }\r\n  \r\n        boardElement.innerHTML = ''; // Nettoyage avant création\r\n  \r\n        for (let row = 0; row < 8; row++) {\r\n          for (let col = 0; col < 8; col++) {\r\n            const square = document.createElement('div');\r\n            square.classList.add('square');\r\n            square.classList.add((row + col) % 2 === 0 ? 'beige' : 'brown');\r\n            square.dataset.row = row;\r\n            square.dataset.col = col;\r\n            boardElement.appendChild(square);\r\n          }\r\n        }\r\n  \r\n        this.addPieces();\r\n      },\r\n  \r\n      addPieces() {\r\n        const boardElement = document.getElementById('chessboard');\r\n        const squares = boardElement.getElementsByClassName('square');\r\n  \r\n        const pieceSymbols = {\r\n          rook: ['♖', '♜'], knight: ['♘', '♞'], bishop: ['♗', '♝'],\r\n          queen: ['♕', '♛'], king: ['♔', '♚'], pawn: ['♙', '♟']\r\n        };\r\n  \r\n        const pieceOrder = ['rook', 'knight', 'bishop', 'queen', 'king', 'bishop', 'knight', 'rook'];\r\n  \r\n        for (let i = 0; i < 8; i++) {\r\n          squares[i].textContent = pieceSymbols[pieceOrder[i]][1]; // Tours, Cavaliers, Fous, Reine, Roi noirs\r\n          squares[8 + i].textContent = pieceSymbols.pawn[1]; // Pions noirs\r\n          squares[48 + i].textContent = pieceSymbols.pawn[0]; // Pions blancs\r\n          squares[56 + i].textContent = pieceSymbols[pieceOrder[i]][0]; // Tours, Cavaliers, Fous, Reine, Roi blancs\r\n        }\r\n      },\r\n  \r\n      async logout() {\r\n        try {\r\n          await axios.post('http://localhost:8000/logout/');\r\n          localStorage.removeItem('userPseudo');\r\n          localStorage.removeItem('userEmail');\r\n          localStorage.removeItem('userNom');\r\n          localStorage.removeItem('userPrenom');\r\n          this.$router.push('/login');\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la déconnexion :\", error.response ? error.response.data : error.message);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .game-container {\r\n    display: flex;\r\n  }\r\n  \r\n  .sidebar {\r\n    width: 200px;\r\n    background-color: #1f1f1f;\r\n    padding: 20px;\r\n    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .sidebar nav ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .sidebar nav ul li {\r\n    margin: 15px 0;\r\n  }\r\n  \r\n  .sidebar nav ul li a {\r\n    color: #e0e0e0;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .sidebar nav ul li a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .board-container {\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .chessboard {\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 50px);\r\n    grid-template-rows: repeat(8, 50px);\r\n    border: 2px solid #333;\r\n    min-width: 400px;\r\n    min-height: 400px;\r\n    height: 400px;\r\n  }\r\n  \r\n  .square {\r\n  width: 50px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n  border: 1px solid white; /* Ajoute une bordure pour voir les cases */\r\n}\r\n  \r\n  .square.beige {\r\n    background-color: #f5f5dc;\r\n  }\r\n  \r\n  .square.brown {\r\n    background-color: #8b4513;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}