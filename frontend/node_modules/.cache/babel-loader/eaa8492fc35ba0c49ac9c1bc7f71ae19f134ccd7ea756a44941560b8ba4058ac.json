{"ast":null,"code":"export default {\n  name: \"GameBoard\",\n  props: ['gameCode', 'playerColor'],\n  data() {\n    return {\n      board: null\n    };\n  },\n  mounted() {\n    this.initializeBoard();\n  },\n  methods: {\n    initializeBoard() {\n      const boardElement = document.getElementById('chessboard');\n      boardElement.innerHTML = ''; // Clear the board\n\n      for (let row = 0; row < 8; row++) {\n        for (let col = 0; col < 8; col++) {\n          const square = document.createElement('div');\n          square.classList.add('square');\n          square.classList.add((row + col) % 2 === 0 ? 'beige' : 'brown');\n          boardElement.appendChild(square);\n        }\n      }\n\n      // Add pieces (for simplicity, only adding pawns here)\n      this.addPieces();\n    },\n    addPieces() {\n      const boardElement = document.getElementById('chessboard');\n      const squares = boardElement.getElementsByClassName('square');\n\n      // Add white pawns\n      for (let i = 8; i < 16; i++) {\n        squares[i].textContent = '♙';\n      }\n\n      // Add black pawns\n      for (let i = 48; i < 56; i++) {\n        squares[i].textContent = '♟';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","board","mounted","initializeBoard","methods","boardElement","document","getElementById","innerHTML","row","col","square","createElement","classList","add","appendChild","addPieces","squares","getElementsByClassName","i","textContent"],"sources":["C:\\wamp64\\www\\Chess\\frontend\\src\\components\\GameBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"board-container\">\r\n      <h2>Partie d'Échecs</h2>\r\n      <p>Code de la partie : {{ gameCode }}</p>\r\n      <p>Vous jouez les : {{ playerColor }}</p>\r\n      <div id=\"chessboard\" class=\"chessboard\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"GameBoard\",\r\n    props: ['gameCode', 'playerColor'],\r\n    data() {\r\n      return {\r\n        board: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      this.initializeBoard();\r\n    },\r\n    methods: {\r\n      initializeBoard() {\r\n        const boardElement = document.getElementById('chessboard');\r\n        boardElement.innerHTML = ''; // Clear the board\r\n  \r\n        for (let row = 0; row < 8; row++) {\r\n          for (let col = 0; col < 8; col++) {\r\n            const square = document.createElement('div');\r\n            square.classList.add('square');\r\n            square.classList.add((row + col) % 2 === 0 ? 'beige' : 'brown');\r\n            boardElement.appendChild(square);\r\n          }\r\n        }\r\n  \r\n        // Add pieces (for simplicity, only adding pawns here)\r\n        this.addPieces();\r\n      },\r\n      addPieces() {\r\n        const boardElement = document.getElementById('chessboard');\r\n        const squares = boardElement.getElementsByClassName('square');\r\n  \r\n        // Add white pawns\r\n        for (let i = 8; i < 16; i++) {\r\n          squares[i].textContent = '♙';\r\n        }\r\n  \r\n        // Add black pawns\r\n        for (let i = 48; i < 56; i++) {\r\n          squares[i].textContent = '♟';\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .board-container {\r\n    padding: 20px;\r\n    text-align: center;\r\n    background-color: #ffffff; /* Fond clair pour mieux voir l'échiquier */\r\n  }\r\n  \r\n  .chessboard {\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 50px);\r\n    grid-template-rows: repeat(8, 50px);\r\n    border: 2px solid #333;\r\n  }\r\n  \r\n  .square {\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n  }\r\n  \r\n  .square.beige {\r\n    background-color: #f5f5dc;\r\n  }\r\n  \r\n  .square.brown {\r\n    background-color: #8b4513;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAUE,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC;EAClCC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,MAAME,YAAW,GAAIC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MAC1DF,YAAY,CAACG,SAAQ,GAAI,EAAE,EAAE;;MAE7B,KAAK,IAAIC,GAAE,GAAI,CAAC,EAAEA,GAAE,GAAI,CAAC,EAAEA,GAAG,EAAE,EAAE;QAChC,KAAK,IAAIC,GAAE,GAAI,CAAC,EAAEA,GAAE,GAAI,CAAC,EAAEA,GAAG,EAAE,EAAE;UAChC,MAAMC,MAAK,GAAIL,QAAQ,CAACM,aAAa,CAAC,KAAK,CAAC;UAC5CD,MAAM,CAACE,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;UAC9BH,MAAM,CAACE,SAAS,CAACC,GAAG,CAAC,CAACL,GAAE,GAAIC,GAAG,IAAI,MAAM,IAAI,OAAM,GAAI,OAAO,CAAC;UAC/DL,YAAY,CAACU,WAAW,CAACJ,MAAM,CAAC;QAClC;MACF;;MAEA;MACA,IAAI,CAACK,SAAS,CAAC,CAAC;IAClB,CAAC;IACDA,SAASA,CAAA,EAAG;MACV,MAAMX,YAAW,GAAIC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MAC1D,MAAMU,OAAM,GAAIZ,YAAY,CAACa,sBAAsB,CAAC,QAAQ,CAAC;;MAE7D;MACA,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC3BF,OAAO,CAACE,CAAC,CAAC,CAACC,WAAU,GAAI,GAAG;MAC9B;;MAEA;MACA,KAAK,IAAID,CAAA,GAAI,EAAE,EAAEA,CAAA,GAAI,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC5BF,OAAO,CAACE,CAAC,CAAC,CAACC,WAAU,GAAI,GAAG;MAC9B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}