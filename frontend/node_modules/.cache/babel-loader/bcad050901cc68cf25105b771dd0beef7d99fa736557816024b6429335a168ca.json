{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: \"GameBoard\",\n  props: ['gameCode', 'playerColor'],\n  data() {\n    return {\n      board: [],\n      selectedSquare: null,\n      turn: \"w\",\n      // \"w\" = blanc, \"b\" = noir\n      pieceImages: {\n        wp: \"/img/pions/w/pawn.png\",\n        bp: \"path/to/black-pawn.png\",\n        wr: \"path/to/white-rook.png\",\n        br: \"path/to/black-rook.png\",\n        wn: \"path/to/white-knight.png\",\n        bn: \"path/to/black-knight.png\",\n        wb: \"path/to/white-bishop.png\",\n        bb: \"path/to/black-bishop.png\",\n        wq: \"path/to/white-queen.png\",\n        bq: \"path/to/black-queen.png\",\n        wk: \"path/to/white-king.png\",\n        bk: \"path/to/black-king.png\"\n      }\n    };\n  },\n  created() {\n    this.board = this.initializeBoard();\n  },\n  methods: {\n    initializeBoard() {\n      return [\"br\", \"bn\", \"bb\", \"bq\", \"bk\", \"bb\", \"bn\", \"br\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wr\", \"wn\", \"wb\", \"wq\", \"wk\", \"wb\", \"wn\", \"wr\"];\n    },\n    handleSquareClick(index) {\n      if (this.selectedSquare === null) {\n        // Sélectionner une pièce si elle appartient au joueur\n        if (this.board[index] && this.board[index][0] === this.turn) {\n          this.selectedSquare = index;\n        }\n      } else {\n        // Déplacer la pièce sélectionnée\n        const validMove = this.isValidMove(this.selectedSquare, index);\n        if (validMove) {\n          this.$set(this.board, index, this.board[this.selectedSquare]); // Déplacer la pièce\n          this.$set(this.board, this.selectedSquare, \"\"); // Vider l'ancienne case\n          this.selectedSquare = null;\n          this.turn = this.turn === \"w\" ? \"b\" : \"w\"; // Changer de joueur\n        } else {\n          this.selectedSquare = null;\n        }\n      }\n    },\n    isValidMove(from) {\n      return this.board[from] !== \"\";\n    },\n    getSquareClass(index) {\n      const row = Math.floor(index / 8);\n      const col = index % 8;\n      return (row + col) % 2 === 0 ? 'beige' : 'brown';\n    },\n    async logout() {\n      try {\n        await axios.post('http://localhost:8000/logout/');\n        localStorage.removeItem('userPseudo');\n        localStorage.removeItem('userEmail');\n        localStorage.removeItem('userNom');\n        localStorage.removeItem('userPrenom');\n        this.$router.push('/login');\n      } catch (error) {\n        console.error(\"Erreur lors de la déconnexion :\", error.response ? error.response.data : error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","data","board","selectedSquare","turn","pieceImages","wp","bp","wr","br","wn","bn","wb","bb","wq","bq","wk","bk","created","initializeBoard","methods","handleSquareClick","index","validMove","isValidMove","$set","from","getSquareClass","row","Math","floor","col","logout","post","localStorage","removeItem","$router","push","error","console","response","message"],"sources":["C:\\wamp64\\www\\Chess\\frontend\\src\\components\\GameBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"game-container\">\r\n      <aside class=\"sidebar\">\r\n        <nav>\r\n          <ul>\r\n            <li><router-link to=\"/menu\">Accueil</router-link></li>\r\n            <li><router-link to=\"/parametres\">Paramètres</router-link></li>\r\n            <li><a href=\"#\" @click.prevent=\"logout\">Déconnexion</a></li>\r\n          </ul>\r\n        </nav>\r\n      </aside>\r\n  \r\n      <div class=\"board-container\">\r\n        <h2>Partie d'Échecs</h2>\r\n        <p>Code de la partie : {{ gameCode }}</p>\r\n        <p>Vous jouez les : {{ playerColor === 'w' ? 'Blancs' : 'Noirs' }}</p>\r\n        <p>Tour actuel : {{ turn === 'w' ? 'Blancs' : 'Noirs' }}</p>\r\n  \r\n        <div id=\"chessboard\" class=\"chessboard\">\r\n          <div \r\n            v-for=\"(piece, index) in board\" \r\n            :key=\"index\" \r\n            class=\"square\" \r\n            :class=\"getSquareClass(index)\" \r\n            @click=\"handleSquareClick(index)\"\r\n          >\r\n            <img v-if=\"piece\" :src=\"pieceImages[piece]\" class=\"piece\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: \"GameBoard\",\r\n    props: ['gameCode', 'playerColor'],\r\n    data() {\r\n      return {\r\n        board: [],\r\n        selectedSquare: null,\r\n        turn: \"w\", // \"w\" = blanc, \"b\" = noir\r\n        pieceImages: {\r\n          wp: \"/img/pions/w/pawn.png\",\r\n          bp: \"path/to/black-pawn.png\",\r\n          wr: \"path/to/white-rook.png\",\r\n          br: \"path/to/black-rook.png\",\r\n          wn: \"path/to/white-knight.png\",\r\n          bn: \"path/to/black-knight.png\",\r\n          wb: \"path/to/white-bishop.png\",\r\n          bb: \"path/to/black-bishop.png\",\r\n          wq: \"path/to/white-queen.png\",\r\n          bq: \"path/to/black-queen.png\",\r\n          wk: \"path/to/white-king.png\",\r\n          bk: \"path/to/black-king.png\"\r\n        }\r\n      };\r\n    },\r\n    created() {\r\n      this.board = this.initializeBoard();\r\n    },\r\n    methods: {\r\n      initializeBoard() {\r\n        return [\r\n          \"br\", \"bn\", \"bb\", \"bq\", \"bk\", \"bb\", \"bn\", \"br\",\r\n          \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\",\r\n          \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n          \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n          \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n          \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n          \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\",\r\n          \"wr\", \"wn\", \"wb\", \"wq\", \"wk\", \"wb\", \"wn\", \"wr\"\r\n        ];\r\n      },\r\n  \r\n      handleSquareClick(index) {\r\n        if (this.selectedSquare === null) {\r\n          // Sélectionner une pièce si elle appartient au joueur\r\n          if (this.board[index] && this.board[index][0] === this.turn) {\r\n            this.selectedSquare = index;\r\n          }\r\n        } else {\r\n          // Déplacer la pièce sélectionnée\r\n          const validMove = this.isValidMove(this.selectedSquare, index);\r\n          if (validMove) {\r\n            this.$set(this.board, index, this.board[this.selectedSquare]); // Déplacer la pièce\r\n            this.$set(this.board, this.selectedSquare, \"\"); // Vider l'ancienne case\r\n            this.selectedSquare = null;\r\n            this.turn = this.turn === \"w\" ? \"b\" : \"w\"; // Changer de joueur\r\n          } else {\r\n            this.selectedSquare = null;\r\n          }\r\n        }\r\n      },\r\n  \r\n      isValidMove(from) {\r\n  return this.board[from] !== \"\";\r\n},\r\n\r\n      getSquareClass(index) {\r\n        const row = Math.floor(index / 8);\r\n        const col = index % 8;\r\n        return (row + col) % 2 === 0 ? 'beige' : 'brown';\r\n      },\r\n  \r\n      async logout() {\r\n        try {\r\n          await axios.post('http://localhost:8000/logout/');\r\n          localStorage.removeItem('userPseudo');\r\n          localStorage.removeItem('userEmail');\r\n          localStorage.removeItem('userNom');\r\n          localStorage.removeItem('userPrenom');\r\n          this.$router.push('/login');\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la déconnexion :\", error.response ? error.response.data : error.message);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .game-container {\r\n    display: flex;\r\n  }\r\n  \r\n  .sidebar {\r\n    width: 200px;\r\n    background-color: #1f1f1f;\r\n    padding: 20px;\r\n    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .sidebar nav ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .sidebar nav ul li {\r\n    margin: 15px 0;\r\n  }\r\n  \r\n  .sidebar nav ul li a {\r\n    color: #e0e0e0;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .sidebar nav ul li a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .board-container {\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .chessboard {\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 50px);\r\n    grid-template-rows: repeat(8, 50px);\r\n    border: 2px solid #333;\r\n    width: 400px;\r\n    height: 400px;\r\n    margin: 20px auto;\r\n  }\r\n  \r\n  .square {\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n    border: 1px solid black;\r\n  }\r\n  \r\n  .square.beige {\r\n    background-color: #f5f5dc;\r\n  }\r\n  \r\n  .square.brown {\r\n    background-color: #8b4513;\r\n  }\r\n  \r\n  .piece {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}