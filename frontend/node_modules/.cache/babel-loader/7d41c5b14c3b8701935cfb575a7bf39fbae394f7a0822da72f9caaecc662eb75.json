{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"game-container\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"board-container\"\n};\nconst _hoisted_4 = {\n  id: \"chessboard\",\n  class: \"chessboard\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"src\"];\nexport function render(_ctx, _cache) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"aside\", _hoisted_2, [_createElementVNode(\"nav\", null, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n    to: \"/menu\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Accueil\")])),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n    to: \"/parametres\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Paramètres\")])),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"li\", null, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => _ctx.logout && _ctx.logout(...args), [\"prevent\"]))\n  }, \"Déconnexion\")])])])]), _createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Partie d'Échecs\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Code de la partie : \" + _toDisplayString(_ctx.gameCode), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Vous jouez les : \" + _toDisplayString(_ctx.playerColor === 'w' ? 'Blancs' : 'Noirs'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tour actuel : \" + _toDisplayString(_ctx.turn === 'w' ? 'Blancs' : 'Noirs'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.board, (piece, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"square\", _ctx.getSquareClass(index)]),\n      onClick: $event => _ctx.handleSquareClick(index)\n    }, [piece ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: _ctx.pieceImages[piece],\n      class: \"piece\"\n    }, null, 8 /* PROPS */, _hoisted_6)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","href","onClick","_withModifiers","args","_ctx","logout","_hoisted_3","_toDisplayString","gameCode","playerColor","turn","_hoisted_4","_Fragment","_renderList","board","piece","index","key","_normalizeClass","getSquareClass","$event","handleSquareClick","src","pieceImages","_hoisted_6","_createCommentVNode","_hoisted_5"],"sources":["C:\\wamp64\\www\\Chess\\frontend\\src\\components\\GameBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"game-container\">\r\n      <aside class=\"sidebar\">\r\n        <nav>\r\n          <ul>\r\n            <li><router-link to=\"/menu\">Accueil</router-link></li>\r\n            <li><router-link to=\"/parametres\">Paramètres</router-link></li>\r\n            <li><a href=\"#\" @click.prevent=\"logout\">Déconnexion</a></li>\r\n          </ul>\r\n        </nav>\r\n      </aside>\r\n  \r\n      <div class=\"board-container\">\r\n        <h2>Partie d'Échecs</h2>\r\n        <p>Code de la partie : {{ gameCode }}</p>\r\n        <p>Vous jouez les : {{ playerColor === 'w' ? 'Blancs' : 'Noirs' }}</p>\r\n        <p>Tour actuel : {{ turn === 'w' ? 'Blancs' : 'Noirs' }}</p>\r\n  \r\n        <div id=\"chessboard\" class=\"chessboard\">\r\n          <div \r\n            v-for=\"(piece, index) in board\" \r\n            :key=\"index\" \r\n            class=\"square\" \r\n            :class=\"getSquareClass(index)\" \r\n            @click=\"handleSquareClick(index)\"\r\n          >\r\n            <img v-if=\"piece\" :src=\"pieceImages[piece]\" class=\"piece\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: \"GameBoard\",\r\n    props: ['gameCode', 'playerColor'],\r\n    data() {\r\n      return {\r\n        board: [],\r\n        selectedSquare: null,\r\n        turn: \"w\", // \"w\" = blanc, \"b\" = noir\r\n        pieceImages: {\r\n          wp: require('@/img/pions/w/pawn.png'),\r\n          bp: require('@/img/pions/b/pawn.png'),\r\n          wr: require('@/img/pions/w/rook.png'),\r\n          br: require('@/img/pions/b/rook.png'),\r\n          wn: require('@/img/pions/w/knight.png'),\r\n          bn: require('@/img/pions/b/knight.png'),\r\n          wb: require('@/img/pions/w/bishop.png'),\r\n          bb: require('@/img/pions/b/bishop.png'),\r\n          wq: require('@/img/pions/w/queen.png'),\r\n          bq: require('@/img/pions/b/queen.png'),\r\n          wk: require('@/img/pions/w/king.png'),\r\n          bk: require('@/img/pions/b/king.png'),\r\n        }\r\n      };\r\n    },\r\n    created() {\r\n      this.board = this.initializeBoard();\r\n    },\r\n    methods: {\r\n        initializeBoard() {\r\n  if (this.playerColor === 'b') {\r\n    // Si le joueur joue avec les noirs, on inverse les positions des pièces\r\n    return [\r\n      \"wr\", \"wn\", \"wb\", \"wq\", \"wk\", \"wb\", \"wn\", \"wr\",\r\n      \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"br\", \"bn\", \"bb\", \"bq\", \"bk\", \"bb\", \"bn\", \"br\"\r\n    ];\r\n  } else {\r\n    // Sinon, si le joueur joue avec les blancs, on garde l'ordre par défaut\r\n    return [\r\n      \"br\", \"bn\", \"bb\", \"bq\", \"bk\", \"bb\", \"bn\", \"br\",\r\n      \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\", \"bp\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",\r\n      \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\", \"wp\",\r\n      \"wr\", \"wn\", \"wb\", \"wq\", \"wk\", \"wb\", \"wn\", \"wr\"\r\n    ];\r\n  }\r\n}\r\n        },\r\n  \r\n      handleSquareClick(index) {\r\n        if (this.selectedSquare === null) {\r\n          // Sélectionner une pièce si elle appartient au joueur\r\n          if (this.board[index] && this.board[index][0] === this.turn) {\r\n            this.selectedSquare = index;\r\n          }\r\n        } else {\r\n          // Déplacer la pièce sélectionnée\r\n          const validMove = this.isValidMove(this.selectedSquare, index);\r\n          if (validMove) {\r\n            this.$set(this.board, index, this.board[this.selectedSquare]); // Déplacer la pièce\r\n            this.$set(this.board, this.selectedSquare, \"\"); // Vider l'ancienne case\r\n            this.selectedSquare = null;\r\n            this.turn = this.turn === \"w\" ? \"b\" : \"w\"; // Changer de joueur\r\n          } else {\r\n            this.selectedSquare = null;\r\n          }\r\n        }\r\n      },\r\n  \r\n      isValidMove(from) {\r\n  return this.board[from] !== \"\";\r\n},\r\n\r\n      getSquareClass(index) {\r\n        const row = Math.floor(index / 8);\r\n        const col = index % 8;\r\n        return (row + col) % 2 === 0 ? 'beige' : 'brown';\r\n      },\r\n  \r\n      async logout() {\r\n        try {\r\n          await axios.post('http://localhost:8000/logout/');\r\n          localStorage.removeItem('userPseudo');\r\n          localStorage.removeItem('userEmail');\r\n          localStorage.removeItem('userNom');\r\n          localStorage.removeItem('userPrenom');\r\n          this.$router.push('/login');\r\n        } catch (error) {\r\n          console.error(\"Erreur lors de la déconnexion :\", error.response ? error.response.data : error.message);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .game-container {\r\n    display: flex;\r\n  }\r\n  \r\n  .sidebar {\r\n    width: 200px;\r\n    background-color: #1f1f1f;\r\n    padding: 20px;\r\n    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.5);\r\n  }\r\n  \r\n  .sidebar nav ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  .sidebar nav ul li {\r\n    margin: 15px 0;\r\n  }\r\n  \r\n  .sidebar nav ul li a {\r\n    color: #e0e0e0;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .sidebar nav ul li a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  .board-container {\r\n    flex-grow: 1;\r\n    padding: 20px;\r\n    text-align: center;\r\n  }\r\n  \r\n  .chessboard {\r\n    display: grid;\r\n    grid-template-columns: repeat(8, 50px);\r\n    grid-template-rows: repeat(8, 50px);\r\n    border: 2px solid #333;\r\n    width: 400px;\r\n    height: 400px;\r\n    margin: 20px auto;\r\n  }\r\n  \r\n  .square {\r\n    width: 50px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n    border: 1px solid black;\r\n  }\r\n  \r\n  .square.beige {\r\n    background-color: #f5f5dc;\r\n  }\r\n  \r\n  .square.brown {\r\n    background-color: #8b4513;\r\n  }\r\n  \r\n  .piece {\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: transparent !important;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAS;;EAUjBA,KAAK,EAAC;AAAiB;;EAMrBC,EAAE,EAAC,YAAY;EAACD,KAAK,EAAC;;mBAlBnC;mBAAA;;;uBACIE,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJC,mBAAA,CAQQ,SARRC,UAQQ,GAPND,mBAAA,CAMM,cALJA,mBAAA,CAIK,aAHHA,mBAAA,CAAsD,aAAlDE,YAAA,CAA6CC,sBAAA;IAAhCC,EAAE,EAAC;EAAO;IALvCC,OAAA,EAAAC,QAAA,CAKwC,MAAOC,MAAA,QAAAA,MAAA,OAL/CC,gBAAA,CAKwC,SAAO,E;IAL/CC,CAAA;QAMYT,mBAAA,CAA+D,aAA3DE,YAAA,CAAsDC,sBAAA;IAAzCC,EAAE,EAAC;EAAa;IAN7CC,OAAA,EAAAC,QAAA,CAM8C,MAAUC,MAAA,QAAAA,MAAA,OANxDC,gBAAA,CAM8C,YAAU,E;IANxDC,CAAA;QAOYT,mBAAA,CAA4D,aAAxDA,mBAAA,CAAmD;IAAhDU,IAAI,EAAC,GAAG;IAAEC,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAPlCK,cAAA,KAAAC,IAAA,KAO4CC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,aAAW,E,SAKzDb,mBAAA,CAiBM,OAjBNgB,UAiBM,G,0BAhBJhB,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAAyC,WAAtC,sBAAoB,GAAAiB,gBAAA,CAAGH,IAAA,CAAAI,QAAQ,kBAClClB,mBAAA,CAAsE,WAAnE,mBAAiB,GAAAiB,gBAAA,CAAGH,IAAA,CAAAK,WAAW,+CAClCnB,mBAAA,CAA4D,WAAzD,gBAAc,GAAAiB,gBAAA,CAAGH,IAAA,CAAAM,IAAI,+CAExBpB,mBAAA,CAUM,OAVNqB,UAUM,I,kBATJvB,mBAAA,CAQMwB,SAAA,QA3BhBC,WAAA,CAoBqCT,IAAA,CAAAU,KAAK,EApB1C,CAoBoBC,KAAK,EAAEC,KAAK;yBADtB5B,mBAAA,CAQM;MANH6B,GAAG,EAAED,KAAK;MACX9B,KAAK,EAtBjBgC,eAAA,EAsBkB,QAAQ,EACNd,IAAA,CAAAe,cAAc,CAACH,KAAK;MAC3Bf,OAAK,EAAAmB,MAAA,IAAEhB,IAAA,CAAAiB,iBAAiB,CAACL,KAAK;QAEpBD,KAAK,I,cAAhB3B,mBAAA,CAA4D;MA1BxE6B,GAAA;MA0B+BK,GAAG,EAAElB,IAAA,CAAAmB,WAAW,CAACR,KAAK;MAAG7B,KAAK,EAAC;4BA1B9DsC,UAAA,KAAAC,mBAAA,e,yBAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}